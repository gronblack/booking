mixin diagram-circle(options)
  -
    const RADIUS = 19
    const SHIFT = -0.25; // 18:00 clock
    const VIEW_BOX_WIDTH = 42;
    const VIEW_BOX_HEIGTH = 42;
    const SPLITTERS_COLOR = '#fff';

    var cX = VIEW_BOX_WIDTH / 2;
    var cY = VIEW_BOX_HEIGTH / 2;
    var diameter = 2 * Math.PI * RADIUS;
    var dashoffsetFirst = diameter * SHIFT;
    var strokeWidth = options.strokeWidth ? options.strokeWidth : 1;

    var toRadians = (angle) => angle * Math.PI / 180;

    var attrClass = attributes.class ? ' ' + attributes.class : '';
    var addClass = attrClass;

  if (!!options.data)
    figure(class='diagram-circle'+addClass)
      div(class='diagram-circle__content')
        svg(width='100%' height='100%' viewBox=`0 0 ${VIEW_BOX_WIDTH} ${VIEW_BOX_HEIGTH}`)
          -
            var segmentAccum = 0;
            var valueSum = options.data.reduce((accum, current) => accum + current.value, 0);

          each obj, ind in options.data
            if (!!obj.linearGradient)
              -
                var gObj = obj.linearGradient;
                var gID = gObj.id ? gObj.id : Math.random().toString(36).substr(2, 9);
                var color = `url(#${gID})`;
              linearGradient(id=gID, x1=gObj.x1, y1=gObj.y1, x2=gObj.x2, y2=gObj.y2)
                each stop in gObj.stops
                  stop(offset=stop.offset, stop-color=stop.stopColor)
            else
              - var color = obj.color;

            -
              var valuePart = diameter * obj.value / valueSum;
              var dashoffset = ind === 0 ? dashoffsetFirst : (diameter - segmentAccum + dashoffsetFirst);
            circle(cx=cX cy=cY r=RADIUS fill='transparent' stroke=color stroke-width=strokeWidth stroke-dasharray=`${valuePart} ${diameter - valuePart}` stroke-dashoffset=dashoffset)
            if (!!options.splitters && ind > 0)
              -var angle = toRadians(360 * (SHIFT - segmentAccum / diameter))
              line(x1=cX y1=cY x2=(cX + (RADIUS*2) * Math.cos(angle)) y2=(cY - (RADIUS*2) * Math.sin(angle)) stroke=SPLITTERS_COLOR)
            - segmentAccum += valuePart;

          if (!!options.splitters)
            -// last line not mast be covered
            -var angle = toRadians(360 * SHIFT)
            line(x1=cX y1=cY x2=(cX + (RADIUS*2) * Math.cos(angle)) y2=(cY - (RADIUS*2) * Math.sin(angle)) stroke=SPLITTERS_COLOR)

          if (!!options.text)
            text(x="50%" y="50%" class="diagram-circle__text") !{options.text}
      if (!!options.legend)
        figcaption(class='diagram-circle__legend')
          ul(class='diagram-circle__legend-list')
            each obj in options.legend
              li(class='diagram-circle__legend-item')
                span(class='diagram-circle__legend-bullet' style=`background:${obj.bulletBackground}`)
                span(class='diagram-circle__legend-text') !{obj.caption}